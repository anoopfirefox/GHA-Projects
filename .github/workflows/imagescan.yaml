name: "CI/CD for Nginx Web App using GHA"

on:
  push:
    tags:    
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  repository: nginx-ubuntu

permissions:
  contents: read  

jobs:
  nginx-image-build:
    runs-on: ubuntu-latest
    environment: production
    
    


    steps:
      - name: checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITUSER_TOKEN }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata for the Docker Image #https://github.com/docker/metadata-action#tags-input
        id: meta
        #uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.repository }}
          tags: |
            type=semver,pattern={{version}}

      - name: Build Docker Image
        run: |
            docker image build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.repository }}:latest ./Nginx-Deployment/.
            #docker image build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.repository }}:${{ steps.meta.outputs.tags }} ./Nginx-Deployment/.
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.repository }}:latest
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'           
      
      - name: Login into Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}         
    
      - name: Build Image and Push to Docker Hub
        run: |
          docker image push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.repository }}:latest
        #uses: docker/build-push-action@v4
        #with:
          #context: ./Nginx-Deployment
          #file: ./Nginx-Deployment/Dockerfile
          #push: true
          ##tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.repository }}:latest
          #tags: ${{ steps.meta.outputs.tags }}
          #labels: ${{ steps.meta.outputs.labels }}      
        
          
        
